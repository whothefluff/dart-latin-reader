--CREATE TABLE "Dictionaries"(
--CREATE TABLE "DictionaryEntries"(

CREATE TABLE "MorphologicalDetails"(
    "form" TEXT NOT NULL,
    "item" INTEGER NOT NULL CHECK( item > 0 ),
    "dictionaryRef" TEXT NOT NULL,
    PRIMARY KEY( form, item )
    -- FOREIGN KEY( dictionaryRef ) REFERENCES DictionaryEntries( dictionary, Id )
) STRICT, WITHOUT ROWID;

CREATE TABLE "MorphologicalDetailInflections"(
    "form" TEXT NOT NULL,
    "item" INTEGER NOT NULL,
    "cnt" INTEGER NOT NULL CHECK( cnt > 0 ),
    "term" TEXT NOT NULL,
    "partOfSpeech" TEXT NOT NULL,
    "stem" TEXT NOT NULL,
    "suffix" TEXT NOT NULL,
    "gender" TEXT,
    "number" TEXT,
    "declension" TEXT,
    "case" TEXT,
    "mood" TEXT,
    "tense" TEXT,
    "voice" TEXT ,
    "person" TEXT,
    PRIMARY KEY( form, item, cnt ),
    FOREIGN KEY( form, item ) REFERENCES MorphologicalDetails( form, item )
) STRICT, WITHOUT ROWID;

CREATE TABLE "Macronizations"( 
    "form" TEXT NOT NULL,
    "syllableNumber" INTEGER NOT NULL CHECK( syllableNumber > 0 ),
    "macronizedSyllable" TEXT NOT NULL,
    "isUncertain" INTEGER NOT NULL CHECK( isUncertain IN (0, 1) ),
    PRIMARY KEY( form, syllableNumber )
) STRICT, WITHOUT ROWID;

CREATE TABLE "Authors"(
    "id" TEXT NOT NULL CHECK( id LIKE '________-____-____-____-____________' ),
    "name" TEXT NOT NULL,
    "about" TEXT,
    "image" BLOB,
    PRIMARY KEY( id )
) STRICT, WITHOUT ROWID;

CREATE TABLE "AuthorAbbreviations"(
    "authorId" TEXT NOT NULL,
    "id" INTEGER NOT NULL CHECK( id > 0 ),
    "val" TEXT NOT NULL,
    PRIMARY KEY( authorId, id ),
    FOREIGN KEY( authorId ) REFERENCES Authors( id )
) STRICT, WITHOUT ROWID;

CREATE TABLE "Works"(
    "id" TEXT NOT NULL CHECK( id LIKE '________-____-____-____-____________' ),
    "name" TEXT NOT NULL,
    "about" TEXT,
    PRIMARY KEY( id )
) STRICT, WITHOUT ROWID;

CREATE TABLE "WorkAbbreviations"(
    "workId" TEXT NOT NULL,
    "id" INTEGER NOT NULL CHECK( id > 0 ),
    "val" TEXT NOT NULL,
    PRIMARY KEY( workId, id ),
    FOREIGN KEY( workId ) REFERENCES Works( id )
) STRICT, WITHOUT ROWID;

CREATE TABLE "WorkContents"(
    "workId" TEXT NOT NULL,
    "idx" INTEGER NOT NULL CHECK( idx > 0 ),
    "word" TEXT NOT NULL,
    "sourceReference" TEXT NOT NULL,
    PRIMARY KEY( workId, idx ),
    FOREIGN KEY( workId ) REFERENCES Works( id )
) STRICT, WITHOUT ROWID;

CREATE TABLE "UserProvidedMacronizations"( 
    "workId" TEXT NOT NULL,
    "idx" INTEGER NOT NULL,
    "syllableNumber" INTEGER NOT NULL,
    "macronizedSyllable" TEXT NOT NULL,
    PRIMARY KEY( workId, idx, syllableNumber ),
    FOREIGN KEY( workId, idx ) REFERENCES WorkContents( workId, idx )
) STRICT, WITHOUT ROWID;

CREATE TABLE "WorkContentSubdivisions"(
    "workId" TEXT NOT NULL,
    "typ" TEXT NOT NULL CHECK( typ IN ('VERS','BOOK','POEM','PROL','EPIL','TITL','PARA') ), --add more as needed
    "cnt" INTEGER NOT NULL CHECK( cnt > 0 ),
    "name" TEXT NOT NULL,
    "node" TEXT NOT NULL UNIQUE CHECK( node LIKE '________-____-____-____-____________' ),
    "parent" TEXT CHECK( parent LIKE '________-____-____-____-____________' ),
    "fromIndex" INTEGER NOT NULL CHECK( fromIndex > 0 ),
    "toIndex" INTEGER NOT NULL CHECK( toIndex > 0 ),
    PRIMARY KEY( workId, typ, cnt ),
    FOREIGN KEY( workId, fromIndex ) REFERENCES WorkContents( workId, idx ),
    FOREIGN KEY( workId, toIndex ) REFERENCES WorkContents( workId, idx )
) STRICT, WITHOUT ROWID;

CREATE TABLE "WorkContentSupplementary"(
    "workId" TEXT NOT NULL,
    "typ" TEXT NOT NULL CHECK( typ IN ('NOTE','GAP','ABBR') ),
    "cnt" INTEGER NOT NULL CHECK( cnt > 0 ),
    "fromIndex" INTEGER NOT NULL,
    "toIndex" INTEGER NOT NULL,
    "val" TEXT NOT NULL,
    PRIMARY KEY( workId, typ, cnt ),
    FOREIGN KEY( workId ) REFERENCES Works( id )
) STRICT, WITHOUT ROWID;

CREATE TABLE "AuthorsAndWorks"(
    "authorId" TEXT NOT NULL,
    "workId" TEXT NOT NULL,
    PRIMARY KEY( authorId, workId ),
    FOREIGN KEY( authorId ) REFERENCES Authors( id ),
    FOREIGN KEY( workId ) REFERENCES Works( id )
) STRICT, WITHOUT ROWID;